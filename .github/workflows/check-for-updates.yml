# Simple workflow for deploying static content to GitHub Pages
name: Check for plugin updates

on:
  # Runs on pushes targeting the default branch
  schedule:
    - cron: "0 7 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  check-for-updates:
    runs-on: ubuntu-latest
    outputs:
      exit_code: ${{ steps.check-for-updates.outputs.exit_code }}
      github_SHA: ${{ steps.get-sha.outputs.github_SHA }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Run Check For Updates
        id: check-for-updates
        env:
          VAULT_PASS: ${{ secrets.VAULT_PASS }}
          PAT: ${{ secrets.PAT }}
          ORG: ${{ github.repository_owner }}
          REPO: ${{ github.repository }}
        run: |
          echo "--- Directory Listing ---"
          ls -la
          bun install
          bun run ./bin/updatePackages.ts || echo "exit_code=$?" >> $GITHUB_OUTPUT

      - name: Get SHA
        id: get-sha
        run: |
          echo "github_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "GitHub SHA: $(git rev-parse HEAD)"

  deploy:
    needs: check-for-updates
    if: ${{ needs.check-for-updates.outputs.github_SHA != github.sha }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: echo variales
        run: |
          echo "calculated github_SHA: ${{ needs.check-for-updates.outputs.github_SHA }}"
          echo "workflow github.sha: ${{ github.sha }}"
          echo "workflow github.ref: ${{ github.ref }}"
          echo "exit_code: ${{ needs.check-for-updates.outputs.exit_code }}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: "source"
          ref: ${{ needs.check-for-updates.outputs.github_SHA }}

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Make dist directory
        id: make-dist
        run: |
          mkdir -p dist

      - name: Run Bun To Generate Composer Files
        run: |
          echo "--- Directory Listing ---"
          ls -la
          cd source
          bun install
          bun run ./src/actions/generate-composer.ts --host ${{ github.repository_owner }} --out ../dist/packages.json

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # built files
          path: "./dist"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
